# Configuration des services pour SigmasoftDataTableBundle
# Standards Symfony avec PSR-4 optimisé

services:
    # Configuration par défaut des services
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    # Auto-configuration des services du bundle
    Sigmasoft\DataTableBundle\:
        resource: '../src/*'
        exclude:
            - '../src/{DependencyInjection,Entity,Tests,Kernel.php}'
            - '../src/Column/ColumnInterface.php'
            - '../src/DataProvider/DataProviderInterface.php'
            - '../src/Service/DataTableRegistryInterface.php'
            - '../src/Configuration/DataTableConfigurationInterface.php'
            - '../src/Configuration/ConfiguratorInterface.php'
            - '../src/InlineEdit/Renderer/FieldRendererInterface.php'
            - '../src/SigmasoftDataTableBundle.php'

    # Services principaux du bundle
    Sigmasoft\DataTableBundle\Builder\DataTableBuilder:
        public: true
        arguments:
            - '@router'
            - '@Sigmasoft\DataTableBundle\Service\DataTableConfigResolver'

    Sigmasoft\DataTableBundle\Component\DataTableComponent:
        public: true
        tags:
            - { name: 'twig.component', key: 'sigmasoft_datatable' }
        arguments:
            - '@Sigmasoft\DataTableBundle\DataProvider\DataProviderInterface'
            - '@doctrine.orm.entity_manager'
            - '@Sigmasoft\DataTableBundle\Service\ColumnFactory'
            - '@Sigmasoft\DataTableBundle\Service\DataTableRegistryInterface'
            - '@logger'

    # Data Provider
    Sigmasoft\DataTableBundle\DataProvider\DoctrineDataProvider:
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@knp_paginator'
            - '@logger'
        tags:
            - { name: 'sigmasoft_datatable.data_provider' }

    Sigmasoft\DataTableBundle\DataProvider\DataProviderInterface:
        alias: Sigmasoft\DataTableBundle\DataProvider\DoctrineDataProvider

    # Services
    Sigmasoft\DataTableBundle\Service\DataTableRegistry:
        public: false

    Sigmasoft\DataTableBundle\Service\DataTableRegistryInterface:
        alias: Sigmasoft\DataTableBundle\Service\DataTableRegistry

    Sigmasoft\DataTableBundle\Service\ColumnFactory:
        arguments:
            - '@router'

    Sigmasoft\DataTableBundle\Service\DataTableConfigResolver:
        arguments:
            - '@parameter_bag'

    Sigmasoft\DataTableBundle\Service\ExportService:
        public: true
        arguments:
            - '@Sigmasoft\DataTableBundle\DataProvider\DataProviderInterface'

    Sigmasoft\DataTableBundle\Service\InlineEditService:
        public: true
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@validator'
            - '@logger'

    Sigmasoft\DataTableBundle\Service\InlineEditServiceV2:
        public: true
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@validator'
            - '@?security.helper'
            - '@logger'

    # Factory
    Sigmasoft\DataTableBundle\Factory\DataTableFactory:
        public: true
        arguments:
            - '@Sigmasoft\DataTableBundle\Builder\DataTableBuilder'
            - '%sigmasoft_data_table.defaults%'

    # Field Renderers
    Sigmasoft\DataTableBundle\InlineEdit\Renderer\TextFieldRenderer:
        arguments:
            - '@property_accessor'
        tags:
            - { name: 'sigmasoft_datatable.field_renderer' }

    Sigmasoft\DataTableBundle\InlineEdit\Renderer\SelectFieldRenderer:
        arguments:
            - '@property_accessor'
        tags:
            - { name: 'sigmasoft_datatable.field_renderer' }

    Sigmasoft\DataTableBundle\InlineEdit\Renderer\TextAreaFieldRenderer:
        arguments:
            - '@property_accessor'
        tags:
            - { name: 'sigmasoft_datatable.field_renderer' }

    Sigmasoft\DataTableBundle\InlineEdit\Renderer\ColorFieldRenderer:
        arguments:
            - '@property_accessor'
        tags:
            - { name: 'sigmasoft_datatable.field_renderer' }

    # Field Renderer Registry
    Sigmasoft\DataTableBundle\InlineEdit\Renderer\FieldRendererRegistry:
        arguments:
            - []  # Will be populated by compiler pass

    # Editable Column Factory
    Sigmasoft\DataTableBundle\Service\EditableColumnFactory:
        public: true
        arguments:
            - '@Sigmasoft\DataTableBundle\InlineEdit\Renderer\FieldRendererRegistry'

    # Maker Command
    Sigmasoft\DataTableBundle\Maker\MakeDataTable:
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@parameter_bag'
            - '%sigmasoft_data_table.config%'
        tags:
            - { name: 'maker.command' }